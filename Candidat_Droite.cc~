#include "Candidat_Droite.hh"
#include "Candidat_Gauche.hh"
//int Candidat_Droite::num_cand=0;

Candidat_Droite::Candidat_Droite(int size,int pb,Program &program,Ville ville):
	Electeur_Droite(ville),
	taille_program(size),
	pb_(pb)
	{
		num_Candidat=Candidat_Gauche::num_cand;
		set_vote(num_Candidat); //il vote pour lui-meme
		Candidat_Gauche::num_cand++;
		program_perso=get_phrase(program);
		
	}

Candidat_Droite::~Candidat_Droite(){}

vector<string> Candidat_Droite::get_phrase(Program prog){
		vector<string> program;
		program=prog.get_prog_droite();
		vector<string> chaine_phrase;
		int cpt=0;
		int a=1; //pour éviter les répétitions des phrases choisies aléatoirement dans les programmes
		for(cpt=0;cpt<taille_program;++cpt){/////on ne depasse pas la taille du programme perso
			//std::cout<<"CPT"<<cpt<<std::endl;
			int i=rand()%(int)program.size()/2; 
			//std::cout<<"I"<<i<<std::endl;
    			int random=rand()%100+1;
			if (random<=pb_){ ////proba que le candidat dise une phrase stupide
				if(cpt!=0){
					while(a==1){
						a=0;
						for(auto it : chaine_phrase) {
							/*std::cout<<"chaine0"<<chaine_phrase[0]<<std::endl;
							std::cout<<"IT"<<(it)<<std::endl;
							std::cout<<"program"<<program[2*i+1]<<std::endl;*/
							if((it).compare(program[2*i+1])==0){
								a=1;
								//std::cout<<"sont les meme!"<<std::endl;
							}
						}
						if (a==1 && cpt<(int)program.size()/2){
							//if(cpt<program.size/2){
								i=rand()%(int)program.size()/2; //si a=1 on change i
						//	}
						}
						else{
							a=0;
							chaine_phrase.push_back(program[2*i+1]);///idiote
							nb_phrases_idiotes++;
							//std::cout<<"on ajoute!"<<std::endl;
						}
					}
				}
				else{
					chaine_phrase.push_back(program[2*i+1]);///idiote
					nb_phrases_idiotes++;
				}
			}
			else{
				if(cpt!=0){
					while(a==1){
						a=0;
						for(auto it : chaine_phrase) {
							/*std::cout<<"chaine0"<<chaine_phrase[0]<<std::endl;
							std::cout<<"IT"<<(it)<<std::endl;
							std::cout<<"program"<<program[2*i]<<std::endl;*/
							if((it).compare(program[2*i])==0){
								a=1;
								//std::cout<<"sont les meme!"<<std::endl;
							}
						}
						if (a==1 && cpt<(int)program.size()/2){
							//if(cpt<(int)program.size/2){
								i=rand()%(int)program.size()/2; //si a=1 on change i
							//}
						}
						else{
							chaine_phrase.push_back(program[2*i]);///pas idiote
							//std::cout<<"on ajoute!"<<std::endl;
						}
					}
				}
				else{
					chaine_phrase.push_back(program[2*i]);///pas idiote
				}
			}
		}
		//for(int i=0;i<(int)chaine_phrase.size();++i)
			//std::cout<<chaine_phrase[i]<<std::endl;
		return chaine_phrase;
}

std::ostream& operator<<(std::ostream& out,Candidat_Droite Cdt) 
{ 
	vector<string> prog=Cdt.get_prog();
	for(int i=0;i<(int)prog.size();i++){
		out<< prog[i]<<std::endl;
	} 
	return out; 
} 

vector<string> Candidat_Droite::get_prog(){
	return program_perso;
}

int Candidat_Droite::get_nb_phrases_idiotes(){
	return nb_phrases_idiotes;
}

int Candidat_Droite::get_num_Candidat(){
	return num_Candidat;
}
